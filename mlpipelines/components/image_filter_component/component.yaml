name: image_filter_component
description: A component that takes a data manifest as input and filters images based on a set of
  criteria. The output manifest will contain the same dataset parquet reference and a modified
  index id reference.
inputs:
  - name: run_id
    description: The run id of the pipeline
    type: String
  - name: artifact_bucket
    description: The GCS bucket used to store the artifact
    type: String
  - name: component_name
    description: the name of the component (used to create gcs artefact path)
    type: String
  - name: project_id
    description: The id of the gcp-project
    type: String
  - name: min_file_size
    description: The minimum size of an image (filter)
    type: Integer
  - name: max_file_size
    description: The maximum size of an image (filter)
    type: Integer
  - name: image_formats
    description: The image formats to keep (filter)
    type: JsonArray
  - name: data_manifest_path
    description: The previous component manifest path
    type: String

outputs:
  - name: data_manifest_path_filter_component
    description: Path to the local file containing the gcs path where the output has been stored

implementation:
  container:
    image: europe-west1-docker.pkg.dev/storied-landing-366912/storied-landing-366912-default-repository/mlpipelines/kubeflow/components/image_filter_component:latest
    command: [
      python3, main.py,
      --run-id,                                   { inputValue: run_id },
      --artifact-bucket,                          { inputValue: artifact_bucket },
      --component-name,                           { inputValue: component_name },
      --project-id,                               { inputValue: project_id },
      --min-file-size,                            { inputValue: min_file_size },
      --max-file-size,                            { inputValue: max_file_size },
      --image-formats,                            { inputValue: image_formats },
      --data-manifest-path,                       { inputPath: data_manifest_path },
      --data-manifest-path-filter-component,      { outputPath: data_manifest_path_filter_component },
    ]